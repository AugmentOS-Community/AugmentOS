services:
  # Build shared packages first
  shared-packages:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/app
      - /app/node_modules
      - bun_cache:/root/.bun
    command: >
      bash -c "bun install && 
              cd packages/utils && bun run build &&
              cd ../config && bun run build &&
              cd ../sdk && bun run build &&
              cd ../agents && bun run build"
    networks:
      - augmentos-network-dev
    environment:
      - SERVICE_NAME=shared-packages

  # Cloud service
  cloud:
    stop_grace_period: 10s
    init: true
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          memory: 256M
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8002:80"
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - SERVICE_NAME=cloud
    env_file:
      - .env
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
      - bun_cache:/root/.bun
    command: bash -c "bun install && cd packages/cloud && bun run dev"
    networks:
      - augmentos-network-dev
    depends_on:
      - shared-packages
    labels:
      com.datadoghq.ad.logs: '[{"source": "cloud", "service": "cloud"}]'

  # Live Captions service
  live-captions:
    stop_grace_period: 5s
    init: true
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8020:80"
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - SERVICE_NAME=live-captions
    env_file:
      - .env
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
      - bun_cache:/root/.bun
      - ./logs:/app/logs
    command: bash -c "bun install && cd packages/apps/livecaptions && bun run dev"
    networks:
      - augmentos-network-dev
    depends_on:
      - shared-packages
      - cloud
    labels:
      com.datadoghq.ad.logs: '[{"source": "live-captions", "service": "live-captions"}]'

  # Flash service
  flash:
    stop_grace_period: 10s
    init: true
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8011:80"
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - SERVICE_NAME=flash
    env_file:
      - .env
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
      - bun_cache:/root/.bun
      - ./logs:/app/logs
    command: bash -c "bun install && cd packages/apps/flash && bun run dev"
    networks:
      - augmentos-network-dev
    depends_on:
      - shared-packages
      - cloud
    labels:
      com.datadoghq.ad.logs: '[{"source": "flash", "service": "flash"}]'

  # Dashboard Manager service
  dashboard-manager:
    stop_grace_period: 10s
    init: true
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8012:80"
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - SERVICE_NAME=dashboard-manager
    env_file:
      - .env
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
      - bun_cache:/root/.bun
      - ./logs:/app/logs
    command: bash -c "bun install && cd packages/apps/dashboard-manager && bun run dev"
    networks:
      - augmentos-network-dev
    depends_on:
      - shared-packages
      - cloud
    labels:
      com.datadoghq.ad.logs: '[{"source": "dashboard-manager", "service": "dashboard-manager"}]'

  # Notifications service
  notify:
    stop_grace_period: 10s
    init: true
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8014:80"
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - SERVICE_NAME=notify
    env_file:
      - .env
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
      - bun_cache:/root/.bun
      - ./logs:/app/logs
    command: bash -c "bun install && cd packages/apps/notify && bun run dev"
    networks:
      - augmentos-network-dev
    depends_on:
      - shared-packages
      - cloud
    labels:
      com.datadoghq.ad.logs: '[{"source": "notify", "service": "notify"}]'

  # Mira AI service
  mira:
    stop_grace_period: 10s
    init: true
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8015:80"
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - SERVICE_NAME=mira
    env_file:
      - .env
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
      - bun_cache:/root/.bun
      - ./logs:/app/logs
    command: bash -c "bun install && cd packages/apps/miraai && bun run dev"
    networks:
      - augmentos-network-dev
    depends_on:
      - shared-packages
      - cloud
    labels:
      com.datadoghq.ad.logs: '[{"source": "mira", "service": "mira"}]'

  live-translation:
    stop_grace_period: 10s
    init: true
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8017:80"
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - SERVICE_NAME=live-translation
    env_file:
      - .env
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
      - bun_cache:/root/.bun
      - ./logs:/app/logs
    command: bash -c "bun install && cd packages/apps/livetranslation && bun run dev"
    networks:
      - augmentos-network-dev
    depends_on:
      - shared-packages
      - cloud
    labels:
      com.datadoghq.ad.logs: '[{"source": "live-translation", "service": "live-translation"}]'

networks:
  augmentos-network-dev:
    driver: bridge
    external: true
    name: augmentos-network-dev

volumes:
  node_modules:
  bun_cache: